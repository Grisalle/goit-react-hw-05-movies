{"version":3,"file":"static/js/135.b2457acd.chunk.js","mappings":"ySAEMA,EAAW,gCACXC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFV,cAC3BG,EAD2B,yBAI1BA,EAASC,KAAKC,SAJY,2CAAH,qDAOnBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,4DACyEO,IAFlE,uBACtBH,EADsB,EACtBA,KADsB,kBAIvBA,EAAKC,SAJkB,2CAAH,sDAOhBG,EAAiB,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,oBACkBT,IAFV,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBM,EAAgB,mCAAG,WAAMD,GAAN,uFACPP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BAC0BT,EAD1B,oBADO,cACxBG,EADwB,yBAIvBA,EAASC,KAAKO,MAJS,2CAAH,sDAOhBC,EAAiB,mCAAG,WAAMH,GAAN,uFACRP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BAC0BT,EAD1B,2BADQ,cACzBG,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD,mHChC9B,GAAiB,E,SCsGjB,EAlGqB,WAAO,IAAD,EACjBI,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAAwCK,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,KAoBhD,IAlBAC,EAAAA,EAAAA,YAAU,WAENP,GAAW,IAEXV,EAAAA,EAAAA,IAAkBC,GACfiB,MAAK,SAAAX,GACJC,EAAgBD,EACjB,IACAY,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPb,GAAW,EACZ,GAGN,GAAE,CAACT,IAECM,EAAL,CAIA,MAQIA,GAAgB,CAAC,EAPnBiB,EADF,EACEA,MACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,OACAC,EANF,EAMEA,YACAC,EAPF,EAOEA,eAGF,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIlB,EAASmB,QAAnB,UACE,mBAAQC,KAAK,SAASC,UAAWC,EAAAA,MAAjC,uBAID1B,IAAW,wCAEXF,IACC,iBAAK2B,UAAWC,EAAAA,UAAhB,WACE,gBACED,UAAWC,EAAAA,OACXC,MAAM,QACNC,IACER,EAAW,yCAC2BA,GAD3B,6EAIbS,IAAKR,KAEP,iBAAKI,UAAWC,EAAAA,YAAhB,WACE,0BACGX,EADH,KACYC,EAAac,MAAM,EAAG,GADlC,QAGA,wCAAgBb,MAChB,sCACA,uBAAIC,KACJ,oCACA,wBACGC,EAAOY,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,GADA,aAOzB,mBACA,iBAAKT,UAAWC,EAAAA,iBAAhB,WACE,oDACA,gBAAID,UAAWC,EAAAA,YAAf,WACE,yBACE,SAAC,KAAD,CAAMJ,GAAG,OAAOG,UAAWC,EAAAA,QAA3B,qBAIF,yBACE,SAAC,KAAD,CAAMJ,GAAG,UAAUG,UAAWC,EAAAA,QAA9B,2BAKJ,mBACA,SAAC,KAAD,SAjEL,CAqEF,C","sources":["api/fetchMovie.js","pages/MovieDetails/MovieDetails.module.css","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4bf52262cafa45f4a78d30477a8ff03d';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieActors = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useEffect, useState, useRef } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'api/fetchMovie';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const backLink = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    const searchMovieDetails = () => {\n      setLoading(true);\n\n      fetchMovieDetails(movieId)\n        .then(movieDetails => {\n          setMovieDetails(movieDetails);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n    searchMovieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movieDetails || {};\n\n  return (\n    <>\n      <Link to={backLink.current}>\n        <button type=\"button\" className={css.btnGB}>\n          Go back\n        </button>\n      </Link>\n      {loading && <div>Loading...</div>}\n\n      {movieDetails && (\n        <div className={css.container}>\n          <img\n            className={css.poster}\n            width=\"300px\"\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n            }\n            alt={original_title}\n          />\n          <div className={css.information}>\n            <h1>\n              {title} ({release_date.slice(0, 4)})\n            </h1>\n            <p>User score: {popularity}</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <ul>\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n      <hr />\n      <div className={css.addInfoContainer}>\n        <h3>Additional information</h3>\n        <ul className={css.addInfoList}>\n          <li>\n            <Link to=\"cast\" className={css.addInfo}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" className={css.addInfo}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","axios","response","data","results","fetchMovieByName","query","fetchMovieDetails","movieId","fetchMovieActors","cast","fetchMovieReviews","useParams","useState","movieDetails","setMovieDetails","loading","setLoading","location","useLocation","backLink","useRef","state","from","useEffect","then","catch","error","console","log","finally","title","release_date","popularity","overview","genres","poster_path","original_title","to","current","type","className","css","width","src","alt","slice","map","genre","name","id"],"sourceRoot":""}