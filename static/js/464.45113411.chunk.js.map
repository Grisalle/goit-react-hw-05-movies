{"version":3,"file":"static/js/464.45113411.chunk.js","mappings":"ySAEMA,EAAW,gCACXC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFV,cAC3BG,EAD2B,yBAI1BA,EAASC,KAAKC,SAJY,2CAAH,qDAOnBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,4DACyEO,IAFlE,uBACtBH,EADsB,EACtBA,KADsB,kBAIvBA,EAAKC,SAJkB,2CAAH,sDAOhBG,EAAiB,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,oBACkBT,IAFV,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBM,EAAgB,mCAAG,WAAMD,GAAN,uFACPP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BAC0BT,EAD1B,oBADO,cACxBG,EADwB,yBAIvBA,EAASC,KAAKO,MAJS,2CAAH,sDAOhBC,EAAiB,mCAAG,WAAMH,GAAN,uFACRP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BAC0BT,EAD1B,2BADQ,cACzBG,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD,8ECiB9B,UA9CqB,WACnB,IAAQI,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IAEXN,EAAAA,EAAAA,IAAkBH,GACfW,MAAK,SAAAL,GACJC,EAAWD,EACZ,IACAM,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPP,GAAW,EACZ,GAIN,GAAE,CAACT,KAGF,gCACGQ,IAAW,wCACQ,IAAnBF,EAAQW,SACP,0BACE,wBACGX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADE,QASC,IAAnBb,EAAQW,SACP,wEAIP,C","sources":["api/fetchMovie.js","pages/MovieDetails/MoviesReviews/MoviesReviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4bf52262cafa45f4a78d30477a8ff03d';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieActors = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'api/fetchMovie';\n\nconst MovieReviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchReviewsFilms = () => {\n      setLoading(true);\n\n      fetchMovieReviews(movieId)\n        .then(reviews => {\n          setReviews(reviews);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetchReviewsFilms();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <div>Loading...</div>}\n      {reviews.length !== 0 && (\n        <div>\n          <ul>\n            {reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <h2>Author: {author}</h2>\n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default MovieReviews;\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","axios","response","data","results","fetchMovieByName","query","fetchMovieDetails","movieId","fetchMovieActors","cast","fetchMovieReviews","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","then","catch","error","console","log","finally","length","map","id","author","content"],"sourceRoot":""}